"use strict"
define("dummy/app",["exports","dummy/resolver","ember-load-initializers","dummy/config/environment"],function(e,t,n,a){Object.defineProperty(e,"__esModule",{value:!0})
var i=void 0
i=Ember.Application.extend({modulePrefix:a.default.modulePrefix,podModulePrefix:a.default.podModulePrefix,Resolver:t.default}),(0,n.default)(i,a.default.modulePrefix),e.default=i}),define("dummy/components/aria-switch",["exports","ember-aria-switch/components/aria-switch"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/controllers/index",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Controller.extend({actions:{toggleCallback:function(e){var t=e?"ON":"OFF"
alert("ARIA Switch: You turned me "+t+"!")}}})}),define("dummy/initializers/container-debug-adapter",["exports","ember-resolver/resolvers/classic/container-debug-adapter"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0]
e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("dummy/initializers/export-application-global",["exports","dummy/config/environment"],function(e,t){function n(){var e=arguments[1]||arguments[0]
if(!1!==t.default.exportApplicationGlobal){var n
if("undefined"!=typeof window)n=window
else if("undefined"!=typeof global)n=global
else{if("undefined"==typeof self)return
n=self}var a,i=t.default.exportApplicationGlobal
a="string"==typeof i?i:Ember.String.classify(t.default.modulePrefix),n[a]||(n[a]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete n[a]}}))}}Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=n,e.default={name:"export-application-global",initialize:n}}),define("dummy/resolver",["exports","ember-resolver"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t.default}),define("dummy/router",["exports","dummy/config/environment"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0})
var n=Ember.Router.extend({location:t.default.locationType,rootURL:t.default.rootURL})
n.map(function(){}),e.default=n}),define("dummy/routes/index",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.Route.extend({})}),define("dummy/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/templates/application",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"V+95Dw89",block:'{"statements":[[11,"div",[]],[15,"id","page"],[15,"class","content-area mxw-600"],[13],[0,"\\n\\n  "],[11,"header",[]],[15,"role","banner"],[13],[0,"\\n    "],[11,"h1",[]],[13],[0,"ember-aria-switch"],[14],[0,"\\n    "],[11,"h2",[]],[13],[0,"\\n      "],[11,"abbr",[]],[15,"title","Accessible Rich Internet Applications"],[13],[0,"ARIA"],[14],[0," Switch Demo\\n    "],[14],[0,"\\n    "],[11,"p",[]],[13],[0,"\\n      Examples of an ARIA Switch button through an Ember addon.  For more information about this component, please read "],[11,"a",[]],[15,"href","https://www.w3.org/TR/wai-aria-1.1/#switch"],[13],[0,"The ARIA 1.1 switch role specification"],[14],[0,",\\n      "],[11,"a",[]],[15,"href","http://inclusive-components.club/toggle-button/"],[13],[0,"Inclusive Components Toggle Buttons"],[14],[0,", "],[11,"a",[]],[15,"href","https://github.com/rajasegar/ember-aria-switch"],[13],[0,"the GitHub repo for this code"],[14],[0," and the "],[11,"a",[]],[15,"href","https://github.com/scottaohara/aria-switch-button"],[13],[0,"original"],[14],[0," ARIA Switch button.\\n    "],[14],[0,"\\n  "],[14],[0,"\\n\\n  "],[11,"main",[]],[15,"aria-label","Demo Content"],[13],[0,"\\n    "],[1,[26,["outlet"]],false],[0,"\\n   "],[14],[0,"\\n\\n"],[14],[0,"\\n"]],"locals":[],"named":[],"yields":[],"hasPartials":false}',meta:{moduleName:"dummy/templates/application.hbs"}})}),define("dummy/templates/index",["exports"],function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=Ember.HTMLBars.template({id:"DcaFOKgf",block:'{"statements":[[1,[33,["aria-switch"],null,[["label","checked"],["My Label",true]]],false],[0,"\\n\\n"],[11,"hr",[]],[13],[14],[0,"\\n\\n"],[11,"p",[]],[15,"id","ex_label"],[13],[0,"\\n  Item 2\\n"],[14],[0,"\\n"],[1,[33,["aria-switch"],null,[["ariaLabelledBy","disabled"],["ex_label",true]]],false],[0,"\\n\\n"],[11,"hr",[]],[13],[14],[0,"\\n\\n"],[11,"p",[]],[15,"id","ex_label2"],[13],[0,"\\n  Item 3 (purposefully disabled)\\n"],[14],[0,"\\n"],[1,[33,["aria-switch"],null,[["label","disabled"],["My Label",true]]],false],[0,"\\n\\n"],[11,"hr",[]],[13],[14],[0,"\\n\\n"],[11,"p",[]],[15,"id","ex_label3"],[13],[0,"\\n  Item 4 (purposefully missing aria-label)\\n"],[14],[0,"\\n"],[1,[26,["aria-switch"]],false],[0,"\\n\\n"],[11,"hr",[]],[13],[14],[0,"\\n"],[11,"p",[]],[13],[0,"With custom on/off labels"],[14],[0,"\\n"],[1,[33,["aria-switch"],null,[["onLabel","offLabel","class"],["Yes","No","toggle toggle-primary"]]],false],[0,"\\n"],[11,"hr",[]],[13],[14],[0,"\\n"],[11,"p",[]],[13],[0,"With toggle callback"],[14],[0,"\\n"],[1,[33,["aria-switch"],null,[["onToggle"],[[33,["action"],[[28,[null]],"toggleCallback"],null]]]],false],[0,"\\n\\n"],[11,"hr",[]],[13],[14],[0,"\\n"],[11,"p",[]],[13],[0,"With color customization using CSS variables"],[14],[0,"\\n"],[1,[33,["aria-switch"],null,[["onToggle"],[[33,["action"],[[28,[null]],"toggleCallback"],null]]]],false],[0,"\\n"]],"locals":[],"named":[],"yields":[],"hasPartials":false}',meta:{moduleName:"dummy/templates/index.hbs"}})}),define("dummy/config/environment",["ember"],function(e){try{var t="dummy/config/environment",n=document.querySelector('meta[name="'+t+'"]').getAttribute("content"),a=JSON.parse(unescape(n)),i={default:a}
return Object.defineProperty(i,"__esModule",{value:!0}),i}catch(e){throw new Error('Could not read config from meta tag with name "'+t+'".')}}),runningTests||require("dummy/app").default.create({})
